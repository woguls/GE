<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="tilemap_8h" kind="file" language="C++">
    <compoundname>tilemap.h</compoundname>
    <includes refid="reference_8h" local="no">resource/reference.h</includes>
    <includes refid="directory_8h" local="no">resource/directory.h</includes>
    <includes local="no">any</includes>
    <includes local="no">cctype</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">memory</includes>
    <includes local="no">tinyxml2.h</includes>
    <includes refid="sdl_8h" local="no">sdl.h</includes>
    <includedby refid="resource__types_8h" local="no">/media/pablo/walter/home/walter/code/sdl-v8/src/resource/resource_types.h</includedby>
    <incdepgraph>
      <node id="230">
        <label>filesystem</label>
      </node>
      <node id="240">
        <label>SDL.h</label>
      </node>
      <node id="241">
        <label>SDL_image.h</label>
      </node>
      <node id="232">
        <label>resource/directory.h</label>
        <link refid="directory_8h_source"/>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
      </node>
      <node id="224">
        <label>resource/reference.h</label>
        <link refid="reference_8h_source"/>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>string</label>
      </node>
      <node id="227">
        <label>map</label>
      </node>
      <node id="233">
        <label>fstream</label>
      </node>
      <node id="235">
        <label>any</label>
      </node>
      <node id="226">
        <label>vector</label>
      </node>
      <node id="238">
        <label>tinyxml2.h</label>
      </node>
      <node id="236">
        <label>cctype</label>
      </node>
      <node id="223">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h</label>
        <link refid="tilemap_8h"/>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>mutex</label>
      </node>
      <node id="239">
        <label>sdl.h</label>
        <link refid="sdl_8h_source"/>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>set</label>
      </node>
      <node id="237">
        <label>algorithm</label>
      </node>
      <node id="229">
        <label>cstring</label>
      </node>
      <node id="231">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="244">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/directory.h</label>
        <link refid="modules_2directory_8h_source"/>
      </node>
      <node id="250">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_ttf.h</label>
        <link refid="sdl__ttf_8h_source"/>
      </node>
      <node id="248">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_surface.h</label>
        <link refid="sdl__surface_8h_source"/>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
      <node id="243">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource/resource_types.h</label>
        <link refid="resource__types_8h_source"/>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
      </node>
      <node id="245">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/resource.h</label>
        <link refid="resource_8h_source"/>
      </node>
      <node id="249">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/tileset_surface.h</label>
        <link refid="tileset__surface_8h_source"/>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/tilelayer_surface.h</label>
        <link refid="tilelayer__surface_8h_source"/>
      </node>
      <node id="242">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h</label>
        <link refid="tilemap_8h"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="247">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/tilemap.h</label>
        <link refid="modules_2tilemap_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classTileArray" prot="public">TileArray</innerclass>
    <innerclass refid="structmap__property" prot="public">map_property</innerclass>
    <innerclass refid="structimage__data" prot="public">image_data</innerclass>
    <innerclass refid="structterrain__data" prot="public">terrain_data</innerclass>
    <innerclass refid="structtile__data" prot="public">tile_data</innerclass>
    <innerclass refid="structtileset__data" prot="public">tileset_data</innerclass>
    <innerclass refid="structimagelayer__data" prot="public">imagelayer_data</innerclass>
    <innerclass refid="structtilelayer__data" prot="public">tilelayer_data</innerclass>
    <innerclass refid="structtilemap__data" prot="public">tilemap_data</innerclass>
    <innerclass refid="classTileMapParser" prot="public">TileMapParser</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="tilemap_8h_1a68fa97773d99e5ca72a571f56b8eb177" prot="public" static="no" strong="no">
        <type></type>
        <name>layer_type</name>
        <enumvalue id="tilemap_8h_1a68fa97773d99e5ca72a571f56b8eb177ae328747e554ad9a4a89232c880863a32" prot="public">
          <name>layer_tile</name>
          <initializer>= 0X01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a68fa97773d99e5ca72a571f56b8eb177a144e5fb1d759820b5198e73afd7a73b8" prot="public">
          <name>layer_objectgroup</name>
          <initializer>= 0X02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a68fa97773d99e5ca72a571f56b8eb177a45de1aabb80a8393e4d9215fc6165fdb" prot="public">
          <name>layer_imagelayer</name>
          <initializer>= 0X04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a68fa97773d99e5ca72a571f56b8eb177a009646233d002037c1f66deaa34d0a8a" prot="public">
          <name>layer_grouplayer</name>
          <initializer>= 0X08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a68fa97773d99e5ca72a571f56b8eb177addaf70b3feae253ba8382e16bf75f3cc" prot="public">
          <name>layer_null</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="26" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="25" bodyend="32"/>
      </memberdef>
      <memberdef kind="enum" id="tilemap_8h_1a6ab95b627f174e2069bd38bdb4f7157d" prot="public" static="no" strong="no">
        <type></type>
        <name>property_type</name>
        <enumvalue id="tilemap_8h_1a6ab95b627f174e2069bd38bdb4f7157da0f6438a534ab3b32e5e0c7e15a528f24" prot="public">
          <name>property_none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a6ab95b627f174e2069bd38bdb4f7157daaf5fd1b650b43b13fe1c6c476f0d97c2" prot="public">
          <name>property_string</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a6ab95b627f174e2069bd38bdb4f7157dac45230ac1dbc80c38040756a0f731c45" prot="public">
          <name>property_bool</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a6ab95b627f174e2069bd38bdb4f7157dab710777f7305fa12b9c70733d5fd5c58" prot="public">
          <name>property_int</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a6ab95b627f174e2069bd38bdb4f7157da1ed918703027d935fc4d30f499a4f064" prot="public">
          <name>property_float</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a6ab95b627f174e2069bd38bdb4f7157da405a339aedecaf993c8a6b2c75e6f1d8" prot="public">
          <name>property_color</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a6ab95b627f174e2069bd38bdb4f7157daf4b2d49ef3f9537262294721b23f7249" prot="public">
          <name>property_file</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="35" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="tilemap_8h_1a6b8b0a33ff5def48810c34b7ffd81def" prot="public" static="no" strong="no">
        <type></type>
        <name>tilemap_renderorder</name>
        <enumvalue id="tilemap_8h_1a6b8b0a33ff5def48810c34b7ffd81defa908872a837ad5c1cfe14ef448098034b" prot="public">
          <name>renderorder_right_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a6b8b0a33ff5def48810c34b7ffd81defaba400513788a482d1026df7ced118ba3" prot="public">
          <name>renderorder_right_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a6b8b0a33ff5def48810c34b7ffd81defacc68e61a93d23a9121f28647e1268637" prot="public">
          <name>renderorder_left_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a6b8b0a33ff5def48810c34b7ffd81defabc7645df7bdcd51895e835d55f08a34e" prot="public">
          <name>renderorder_left_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="45" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="tilemap_8h_1ad70b4c96a98f9ad705d8bc9218b93064" prot="public" static="no" strong="no">
        <type></type>
        <name>tilemap_orientation</name>
        <enumvalue id="tilemap_8h_1ad70b4c96a98f9ad705d8bc9218b93064a73380b45a892ba795be4984faf31cfc7" prot="public">
          <name>orientation_orthogonal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1ad70b4c96a98f9ad705d8bc9218b93064a870555fc383c7ad83897aaa401cb42b8" prot="public">
          <name>orientation_isometric</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1ad70b4c96a98f9ad705d8bc9218b93064af0224204fd2c6d46ffa48c5f0f06c463" prot="public">
          <name>orientation_staggered</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1ad70b4c96a98f9ad705d8bc9218b93064adfeccef88fab11de31aa6955f6f1081c" prot="public">
          <name>orientation_hexagonal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="52" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="enum" id="tilemap_8h_1a61305dda726de3614de33718b68c2424" prot="public" static="no" strong="no">
        <type></type>
        <name>tilemap_staggeraxis</name>
        <enumvalue id="tilemap_8h_1a61305dda726de3614de33718b68c2424a8c37376c02981c9df386ecc547daeed2" prot="public">
          <name>staggeraxis_x</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a61305dda726de3614de33718b68c2424a47480547651216488a7692da39e72f57" prot="public">
          <name>staggeraxis_y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="59" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="enum" id="tilemap_8h_1a501caeb2b2ecb2144c9f3b675f44c4fe" prot="public" static="no" strong="no">
        <type></type>
        <name>tilemap_staggerindex</name>
        <enumvalue id="tilemap_8h_1a501caeb2b2ecb2144c9f3b675f44c4feaf3d2fc565d80740ee2ff0c7882de19ef" prot="public">
          <name>staggerindex_even</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a501caeb2b2ecb2144c9f3b675f44c4fea375136a0dfab507d148e225327f28f46" prot="public">
          <name>staggerindex_odd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="64" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="enum" id="tilemap_8h_1a3901a948fb21ef537a290e8e9563f754" prot="public" static="no" strong="no">
        <type></type>
        <name>tilelayer_encoding</name>
        <enumvalue id="tilemap_8h_1a3901a948fb21ef537a290e8e9563f754a0a54f6a877b96e2734cc166a7b8e03d1" prot="public">
          <name>encoding_xml</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a3901a948fb21ef537a290e8e9563f754aab9c9713a6c0ccce66625f451b9afcaf" prot="public">
          <name>encoding_base64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a3901a948fb21ef537a290e8e9563f754a8f46f0fe62b120f3bca80db06ef8f2a1" prot="public">
          <name>encoding_csv</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="69" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="enum" id="tilemap_8h_1a2ec5ec48a5cd1c8246b240b5d27c0d2f" prot="public" static="no" strong="no">
        <type></type>
        <name>tilelayer_compression</name>
        <enumvalue id="tilemap_8h_1a2ec5ec48a5cd1c8246b240b5d27c0d2fa8e1fab2c7ddf2bedc398d5a6badcf281" prot="public">
          <name>compression_none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a2ec5ec48a5cd1c8246b240b5d27c0d2fa32c107fbf238db7cd0813c7a58a8f396" prot="public">
          <name>compression_zlib</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tilemap_8h_1a2ec5ec48a5cd1c8246b240b5d27c0d2fa494817abf3da3d33ba82c2e20d489ff4" prot="public">
          <name>compression_gzip</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="75" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="75" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="tilemap_8h_1a30ff6c10c3285592127c31d7a265bb48" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="structmap__property" kindref="compound">map_property</ref> &gt;</type>
        <definition>typedef std::map&lt;std::string, map_property&gt; property_map_t</definition>
        <argsstring></argsstring>
        <name>property_map_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="86" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tilemap_8h_1a489bcdf1836ded6d9626349c9ef3b6dc" prot="public" static="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="structterrain__data" kindref="compound">terrain_data</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::unique_ptr&lt;terrain_data&gt; &gt; terrain_list_t</definition>
        <argsstring></argsstring>
        <name>terrain_list_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="117" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tilemap_8h_1af08bae985f8cd5ca9639fccdfe24c518" prot="public" static="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="structtile__data" kindref="compound">tile_data</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::unique_ptr&lt;tile_data&gt; &gt; tile_data_list_t</definition>
        <argsstring></argsstring>
        <name>tile_data_list_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="118" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tilemap_8h_1a95e684291330c3834bb2baf8a76df6cd" prot="public" static="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="structtileset__data" kindref="compound">tileset_data</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::unique_ptr&lt;tileset_data&gt; &gt; tileset_list_t</definition>
        <argsstring></argsstring>
        <name>tileset_list_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="172" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tilemap_8h_1a3fdc7fccb55ea25ed8c5f61dfd2d0628" prot="public" static="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="structimagelayer__data" kindref="compound">imagelayer_data</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::unique_ptr&lt;imagelayer_data&gt; &gt; imagelayer_list_t</definition>
        <argsstring></argsstring>
        <name>imagelayer_list_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="173" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tilemap_8h_1a5dd3bc18e32da194ab236809595f6e77" prot="public" static="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="structtilelayer__data" kindref="compound">tilelayer_data</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::unique_ptr&lt;tilelayer_data&gt; &gt; tilelayer_list_t</definition>
        <argsstring></argsstring>
        <name>tilelayer_list_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="174" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tilemap_8h_1ab5376a11459dbe209be5738a7ddc6851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const image_data &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="structimage__data" kindref="compound">image_data</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1ac969355ff0ef1158ef51e1b35af210cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tilemap_data &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="structtilemap__data" kindref="compound">tilemap_data</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a560a501f44a4262b63329260c9e69136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tilemap_renderorder &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const tilemap_renderorder &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a38ec55ac899e4669569663acd1f7d8e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tilemap_orientation &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const tilemap_orientation &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a9ef0f12b131e79ba7c19b1f15e347df0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tilemap_staggeraxis &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const tilemap_staggeraxis &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a4b87f8239be1db880efc62b0482af3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tilemap_staggerindex &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const tilemap_staggerindex &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a2fdb1f3242e7eb8f227f255566383d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tilelayer_encoding &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const tilelayer_encoding &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a38536dc4c36f622be1c9aaac28527ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tilelayer_list_t &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const tilelayer_list_t &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1acbcb0198ceac163b5d7cbac01c38251d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tilelayer_compression &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const tilelayer_compression &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1acb96bcf05bb5203c124363f4b1f258e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const property_type &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const property_type &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a014a6cedb8940d72592584156ff7a581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const layer_type &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const layer_type &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a932990682196fe484c9d90910cc08706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const map_property &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="structmap__property" kindref="compound">map_property</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a945a7f3dbad4e94cad2cd7860da067fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const property_map_t &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const property_map_t &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1adbffaef8034dd0c12c5164ae936ab88c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const terrain_data &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="structterrain__data" kindref="compound">terrain_data</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1aae6cc4a7664a79c5262b6d611d5a761a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tileset_list_t &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const tileset_list_t &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1a9cc7625f240603587f7d699d78d3bfdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const terrain_list_t &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const terrain_list_t &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1af40ace7e80e4e1e804f532755c734a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tile_data_list_t &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const tile_data_list_t &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1aec813fb83eb0154cb49dffe48272dda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const tilelayer_data &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="structtilelayer__data" kindref="compound">tilelayer_data</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1ae8363f2e3c58daccc75ebc0f4a297f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const imagelayer_list_t &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const imagelayer_list_t &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tilemap_8h_1afcc12cfa200756f811b2d6c6071c3f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const imagelayer_data &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="structimagelayer__data" kindref="compound">imagelayer_data</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h" line="302" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__ENGINE_TILEMAP_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENGINE_TILEMAP_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;resource/reference.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;resource/directory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;any&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cctype&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tinyxml2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sdl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classTileArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTileArray" kindref="compound">TileArray</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classTileArray" kindref="compound">TileArray</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_tiles.reserve(size);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetTile(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>{<sp/>_tiles[index]<sp/>=<sp/>id;<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetTile(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tiles[index];<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>_tiles;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>why<sp/>is<sp/>this<sp/>laid<sp/>out<sp/>like<sp/>bitmasks?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>layer_type</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_tile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0X01,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_objectgroup<sp/>=<sp/>0X02,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_imagelayer<sp/><sp/>=<sp/>0X04,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_grouplayer<sp/><sp/>=<sp/>0X08,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_null<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x10</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>property_type</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>property_none,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>property_string,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>property_bool,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>property_int,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>property_float,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>property_color,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>property_file</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tilemap_renderorder<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>renderorder_right_down,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>renderorder_right_up,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>renderorder_left_down,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>renderorder_left_up</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tilemap_orientation<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>orientation_orthogonal,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>orientation_isometric,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>orientation_staggered,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>orientation_hexagonal</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tilemap_staggeraxis<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>staggeraxis_x,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>staggeraxis_y</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tilemap_staggerindex<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>staggerindex_even,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>staggerindex_odd</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tilelayer_encoding<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>encoding_xml,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>encoding_base64,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>encoding_csv</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tilelayer_compression<sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>compression_none,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>compression_zlib,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>compression_gzip</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structmap__property" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmap__property" kindref="compound">map_property</ref><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::any<sp/>object;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>property_type<sp/>type;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>map_property&gt;<sp/>property_map_t;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structimage__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structimage__data" kindref="compound">image_data</ref><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classResourceReference" kindref="compound">ResourceReference</ref>*<sp/>image;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>transparent_color;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structterrain__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structterrain__data" kindref="compound">terrain_data</ref><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tileID;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>property_map_t<sp/>properties;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structtile__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtile__data" kindref="compound">tile_data</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>property_map_t<sp/>properties;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isAnimated;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasObjects;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasObjectGroup;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tmx::ObjectGroup<sp/>*objectGroup;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalDuration;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;AnimationFrame&gt;<sp/>frames;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ResourceReference*<sp/>image;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structimage__data" kindref="compound">image_data</ref><sp/>_image;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>type;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;terrain_data&gt;&gt;<sp/>terrain_list_t;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;tile_data&gt;&gt;<sp/>tile_data_list_t;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="structtileset__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtileset__data" kindref="compound">tileset_data</ref><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_gid;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tile_width;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tile_height;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacing;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tile_count;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columns;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_x;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_y;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classResourceReference" kindref="compound">ResourceReference</ref>*<sp/>image;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>image_transparent_color;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_width;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_height;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structimage__data" kindref="compound">image_data</ref><sp/>_image;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>terrain_list_t<sp/>terrainTypes;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_data_list_t<sp/>tiles;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>property_map_t<sp/>properties;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structimagelayer__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structimagelayer__data" kindref="compound">imagelayer_data</ref><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>opacity;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>property_map_t<sp/>properties;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structimage__data" kindref="compound">image_data</ref><sp/>image;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="structtilelayer__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtilelayer__data" kindref="compound">tilelayer_data</ref><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>opacity;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>property_map_t<sp/>properties;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>tilelayer_encoding<sp/>encoding;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>tilelayer_compression<sp/>compression;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>_tiles;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;tileset_data&gt;&gt;<sp/>tileset_list_t;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;imagelayer_data&gt;&gt;<sp/>imagelayer_list_t;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;tilelayer_data&gt;&gt;<sp/>tilelayer_list_t;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="structtilemap__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtilemap__data" kindref="compound">tilemap_data</ref><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>version;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tile_width;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tile_height;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_object_id;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>background_color;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>tilemap_renderorder<sp/>render_order;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>tilemap_orientation<sp/>orientation;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>tilemap_staggeraxis<sp/>stagger_axis;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>tilemap_staggerindex<sp/>stagger_index;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hexside_length;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>property_map_t<sp/>properties;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>tileset_list_t<sp/>tilesets;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>imagelayer_list_t<sp/>imagelayers;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>tilelayer_list_t<sp/>tilelayers;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>Tmx::ObjectGroup*<sp/>&gt;<sp/>object_groups;</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>Tmx::GroupLayer*<sp/>&gt;<sp/>group_layers;</highlight></codeline>
<codeline lineno="196"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_error;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>error_code;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>error_text;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classTileMapParser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTileMapParser" kindref="compound">TileMapParser</ref><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TileMap;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTileMapParser" kindref="compound">TileMapParser</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classTileMapParser" kindref="compound">TileMapParser</ref>(<sp/><ref refid="classResourceDirectory" kindref="compound">ResourceDirectory</ref>*<sp/>dir,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classResourceReference" kindref="compound">ResourceReference</ref>&amp;<sp/>reference)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>_dir{dir},</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_reference{reference},</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_order{0}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classTileMapParser" kindref="compound">TileMapParser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classResourceReference" kindref="compound">ResourceReference</ref>&amp;<sp/>reference)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>_reference{reference},</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_order{0}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;const<sp/>tilemap_data&gt;<sp/>Parse();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Parse(tinyxml2::XMLNode<sp/>*node,<sp/><ref refid="structtilemap__data" kindref="compound">tilemap_data</ref>&amp;<sp/>map);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseProperties(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tinyxml2::XMLNode<sp/>*node,<sp/>property_map_t&amp;<sp/>map);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tinyxml2::XMLElement<sp/>*propertyElem,<sp/><ref refid="structmap__property" kindref="compound">map_property</ref>&amp;<sp/>prop);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tinyxml2::XMLNode<sp/>*imageElem,<sp/><ref refid="structimage__data" kindref="compound">image_data</ref>*<sp/>image);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseTileset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tinyxml2::XMLNode<sp/>*tilesetNode,<sp/><ref refid="structtileset__data" kindref="compound">tileset_data</ref>*<sp/>tileset<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseTileLayer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tinyxml2::XMLNode<sp/>*tilelayerNode,<sp/><ref refid="structtilelayer__data" kindref="compound">tilelayer_data</ref>*<sp/>tilelayer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseImageLayer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tinyxml2::XMLNode<sp/>*tileLayerNode,<sp/><ref refid="structimagelayer__data" kindref="compound">imagelayer_data</ref>*<sp/>imagelayer<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseTile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tinyxml2::XMLNode<sp/>*tileNode,<sp/><ref refid="structtile__data" kindref="compound">tile_data</ref>*<sp/>tileset<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseXML(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tinyxml2::XMLNode<sp/>*dataNode,<sp/><ref refid="structtilelayer__data" kindref="compound">tilelayer_data</ref>*<sp/>tilelayer,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseBase64(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;innerText,<sp/><ref refid="structtilelayer__data" kindref="compound">tilelayer_data</ref>*<sp/>tilelayer,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseCSV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;innerText,<sp/><ref refid="structtilelayer__data" kindref="compound">tilelayer_data</ref>*<sp/>tilelayer,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*DecompressGZIP(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expectedSize);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classResourceDirectory" kindref="compound">ResourceDirectory</ref>*<sp/>_dir;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classResourceReference" kindref="compound">ResourceReference</ref>&amp;<sp/>_reference;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>StringToColor32(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>StringToLower(std::string<sp/>s);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_order;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">std::ostream&amp;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">(std::ostream<sp/>&amp;o,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structimage__data" kindref="compound">image_data</ref>&amp;<sp/>a);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtilemap__data" kindref="compound">tilemap_data</ref><sp/>&amp;a);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tilemap_renderorder&amp;<sp/>a);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tilemap_orientation&amp;<sp/>a);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tilemap_staggeraxis&amp;<sp/>a);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tilemap_staggerindex&amp;<sp/>a);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tilelayer_encoding&amp;<sp/>a);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">std::ostream&amp;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">(std::ostream<sp/>&amp;o,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tilelayer_list_t&amp;<sp/>a);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tilelayer_compression&amp;<sp/>a);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>property_type&amp;<sp/>a);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>layer_type&amp;<sp/>a);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmap__property" kindref="compound">map_property</ref>&amp;<sp/>a);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>property_map_t&amp;<sp/>a);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structterrain__data" kindref="compound">terrain_data</ref>&amp;<sp/>a);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">std::ostream&amp;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">(std::ostream<sp/>&amp;o,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tileset_list_t&amp;<sp/>a);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">std::ostream&amp;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">(std::ostream<sp/>&amp;o,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>terrain_list_t&amp;<sp/>a);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">std::ostream&amp;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">(std::ostream<sp/>&amp;o,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tile_data_list_t&amp;<sp/>a);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">std::ostream&amp;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">(std::ostream<sp/>&amp;o,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtilelayer__data" kindref="compound">tilelayer_data</ref>&amp;<sp/>a);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">std::ostream&amp;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">(std::ostream<sp/>&amp;o,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>imagelayer_list_t&amp;<sp/>a);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">std::ostream&amp;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">(std::ostream<sp/>&amp;o,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structimagelayer__data" kindref="compound">imagelayer_data</ref>&amp;<sp/>a);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>typedef<sp/>common::Object&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>::TileMap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>common::engine_resource_tilemap_t&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>resource_tilemap_t;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/resource/tilemap.h"/>
  </compounddef>
</doxygen>
