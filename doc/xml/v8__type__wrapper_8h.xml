<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="v8__type__wrapper_8h" kind="file" language="C++">
    <compoundname>v8_type_wrapper.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">v8pp/module.hpp</includes>
    <includes local="no">v8pp/class.hpp</includes>
    <includes refid="common-util_8h" local="no">common-util.h</includes>
    <includes local="no">string</includes>
    <includedby refid="resource__types_8h" local="no">/media/pablo/walter/home/walter/code/sdl-v8/src/resource/resource_types.h</includedby>
    <includedby refid="sdl__surface_8h" local="no">/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_surface.h</includedby>
    <includedby refid="types_8h" local="no">/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/types.h</includedby>
    <incdepgraph>
      <node id="626">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/shell/v8_type_wrapper.h</label>
        <link refid="v8__type__wrapper_8h"/>
        <childnode refid="627" relation="include">
        </childnode>
        <childnode refid="628" relation="include">
        </childnode>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="630" relation="include">
        </childnode>
        <childnode refid="631" relation="include">
        </childnode>
      </node>
      <node id="631">
        <label>string</label>
      </node>
      <node id="628">
        <label>v8pp/module.hpp</label>
      </node>
      <node id="630">
        <label>common-util.h</label>
        <link refid="common-util_8h_source"/>
      </node>
      <node id="629">
        <label>v8pp/class.hpp</label>
      </node>
      <node id="627">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="634">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/directory.h</label>
        <link refid="modules_2directory_8h_source"/>
      </node>
      <node id="640">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_ttf.h</label>
        <link refid="sdl__ttf_8h_source"/>
      </node>
      <node id="632">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/shell/v8_type_wrapper.h</label>
        <link refid="v8__type__wrapper_8h"/>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="641" relation="include">
        </childnode>
      </node>
      <node id="638">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_surface.h</label>
        <link refid="sdl__surface_8h_source"/>
        <childnode refid="636" relation="include">
        </childnode>
        <childnode refid="639" relation="include">
        </childnode>
      </node>
      <node id="633">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource/resource_types.h</label>
        <link refid="resource__types_8h_source"/>
        <childnode refid="634" relation="include">
        </childnode>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="636" relation="include">
        </childnode>
        <childnode refid="637" relation="include">
        </childnode>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="640" relation="include">
        </childnode>
      </node>
      <node id="645">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_renderer.h</label>
        <link refid="sdl__renderer_8h_source"/>
      </node>
      <node id="635">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/resource.h</label>
        <link refid="resource_8h_source"/>
      </node>
      <node id="641">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="636" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="640" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
      </node>
      <node id="639">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/tileset_surface.h</label>
        <link refid="tileset__surface_8h_source"/>
        <childnode refid="636" relation="include">
        </childnode>
      </node>
      <node id="636">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/tilelayer_surface.h</label>
        <link refid="tilelayer__surface_8h_source"/>
      </node>
      <node id="643">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_pixelformat.h</label>
        <link refid="sdl__pixelformat_8h_source"/>
      </node>
      <node id="646">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_texture.h</label>
        <link refid="sdl__texture_8h_source"/>
      </node>
      <node id="647">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_window.h</label>
        <link refid="sdl__window_8h_source"/>
      </node>
      <node id="644">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_rect.h</label>
        <link refid="sdl__rect_8h_source"/>
      </node>
      <node id="642">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/sdl-modules/sdl_event.h</label>
        <link refid="sdl__event_8h_source"/>
      </node>
      <node id="637">
        <label>/media/pablo/walter/home/walter/code/sdl-v8/src/resource-modules/tilemap.h</label>
        <link refid="modules_2tilemap_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classWrapPtr" prot="public">WrapPtr</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="v8__type__wrapper_8h_1ad6d43fcf3274767ec0e663ee2c0f2dcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void InitType</definition>
        <argsstring>(v8pp::module &amp;m)</argsstring>
        <name>InitType</name>
        <param>
          <type>v8pp::module &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/shell/v8_type_wrapper.h" line="37" column="1" bodyfile="/media/pablo/walter/home/walter/code/sdl-v8/src/shell/v8_type_wrapper.h" bodystart="37" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__V8_SDL_TYPE_WRAPPER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__V8_SDL_TYPE_WRAPPER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;v8pp/module.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;v8pp/class.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;common-util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="10" refid="classWrapPtr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classWrapPtr" kindref="compound">WrapPtr</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsEmpty()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_object<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classWrapPtr" kindref="compound">WrapPtr</ref>()<sp/>:<sp/><sp/>_object{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">}<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classWrapPtr" kindref="compound">WrapPtr</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LOG_DEBUG_MESSAGES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>message(</highlight><highlight class="stringliteral">&quot;destructor<sp/>for<sp/>class<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message.append(std::string(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*this).name()));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message.append(</highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>called&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_THREAD(message.c_str());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>Get()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_object;<sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Set(T*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>_object<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/><sp/>||<sp/>obj<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_object<sp/>=<sp/>obj;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Reset(T*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_object<sp/>=<sp/>obj;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>_object;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitType(v8pp::module&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>v8::Isolate*<sp/>isolate<sp/>=<sp/>v8::Isolate::GetCurrent();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>v8pp::class_&lt;T&gt;<sp/><sp/>class_t(isolate);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>class_t</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.set(</highlight><highlight class="stringliteral">&quot;IsEmpty&quot;</highlight><highlight class="normal">,<sp/>&amp;T::IsEmpty)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>m.set(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name(),<sp/>class_t);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_THREAD(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name());</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/media/pablo/walter/home/walter/code/sdl-v8/src/shell/v8_type_wrapper.h"/>
  </compounddef>
</doxygen>
