<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename Char</type>
      </param>
      <param>
        <type>typename Traits</type>
      </param>
      <param>
        <type>typename Alloc</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1a364ccc302334a42407be924270daa76f" prot="public" static="no">
        <type>std::basic_string&lt; Char, Traits, Alloc &gt;</type>
        <definition>using v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;::from_type =  std::basic_string&lt;Char, Traits, Alloc&gt;</definition>
        <argsstring></argsstring>
        <name>from_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="59" column="1" bodyfile="v8pp/convert.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1ac4c0a8cba5496c963c95dad23e9f0527" prot="public" static="no">
        <type>v8::Local&lt; v8::String &gt;</type>
        <definition>using v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;::to_type =  v8::Local&lt;v8::String&gt;</definition>
        <argsstring></argsstring>
        <name>to_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="60" column="1" bodyfile="v8pp/convert.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1aeffd2a493452d63d3ea5982b925e682a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;::is_valid</definition>
        <argsstring>(v8::Isolate *, v8::Local&lt; v8::Value &gt; value)</argsstring>
        <name>is_valid</name>
        <param>
          <type>v8::Isolate *</type>
        </param>
        <param>
          <type>v8::Local&lt; v8::Value &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="62" column="1" bodyfile="v8pp/convert.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1a1330f7d4918d8ecb14b09a80ac26dcd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>from_type</type>
        <definition>static from_type v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;::from_v8</definition>
        <argsstring>(v8::Isolate *isolate, v8::Local&lt; v8::Value &gt; value)</argsstring>
        <name>from_v8</name>
        <param>
          <type>v8::Isolate *</type>
          <declname>isolate</declname>
        </param>
        <param>
          <type>v8::Local&lt; v8::Value &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="67" column="1" bodyfile="v8pp/convert.hpp" bodystart="67" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1a818e6994b2c9258bedb6fc9561be0d91" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>to_type</type>
        <definition>static to_type v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;::to_v8</definition>
        <argsstring>(v8::Isolate *isolate, from_type const &amp;value)</argsstring>
        <name>to_v8</name>
        <param>
          <type>v8::Isolate *</type>
          <declname>isolate</declname>
        </param>
        <param>
          <type>from_type const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="86" column="1" bodyfile="v8pp/convert.hpp" bodystart="86" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="v8pp/convert.hpp" line="55" column="1" bodyfile="v8pp/convert.hpp" bodystart="54" bodyend="101"/>
    <listofallmembers>
      <member refid="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1a364ccc302334a42407be924270daa76f" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;</scope><name>from_type</name></member>
      <member refid="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1a1330f7d4918d8ecb14b09a80ac26dcd6" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;</scope><name>from_v8</name></member>
      <member refid="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1aeffd2a493452d63d3ea5982b925e682a" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;</scope><name>is_valid</name></member>
      <member refid="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1ac4c0a8cba5496c963c95dad23e9f0527" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;</scope><name>to_type</name></member>
      <member refid="structv8pp_1_1convert_3_01std_1_1basic__string_3_01_char_00_01_traits_00_01_alloc_01_4_01_4_1a818e6994b2c9258bedb6fc9561be0d91" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::basic_string&lt; Char, Traits, Alloc &gt; &gt;</scope><name>to_v8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
