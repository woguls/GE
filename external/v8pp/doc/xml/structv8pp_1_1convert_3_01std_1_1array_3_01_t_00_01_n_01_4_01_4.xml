<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>v8pp::convert&lt; std::array&lt; T, N &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1aee6aee929312ebb3629d0372a2476146" prot="public" static="no">
        <type>std::array&lt; T, N &gt;</type>
        <definition>using v8pp::convert&lt; std::array&lt; T, N &gt; &gt;::from_type =  std::array&lt;T, N&gt;</definition>
        <argsstring></argsstring>
        <name>from_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="307" column="1" bodyfile="v8pp/convert.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a429c6fe6779d28bb2a251d9d9f35df41" prot="public" static="no">
        <type>v8::Local&lt; v8::Array &gt;</type>
        <definition>using v8pp::convert&lt; std::array&lt; T, N &gt; &gt;::to_type =  v8::Local&lt;v8::Array&gt;</definition>
        <argsstring></argsstring>
        <name>to_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="308" column="1" bodyfile="v8pp/convert.hpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a63885024dc747b039fc24493ccaf4afe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool v8pp::convert&lt; std::array&lt; T, N &gt; &gt;::is_valid</definition>
        <argsstring>(v8::Isolate *, v8::Local&lt; v8::Value &gt; value)</argsstring>
        <name>is_valid</name>
        <param>
          <type>v8::Isolate *</type>
        </param>
        <param>
          <type>v8::Local&lt; v8::Value &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="310" column="1" bodyfile="v8pp/convert.hpp" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a126fa8f2ba8b6e20a9e1896fe69355ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>from_type</type>
        <definition>static from_type v8pp::convert&lt; std::array&lt; T, N &gt; &gt;::from_v8</definition>
        <argsstring>(v8::Isolate *isolate, v8::Local&lt; v8::Value &gt; value)</argsstring>
        <name>from_v8</name>
        <param>
          <type>v8::Isolate *</type>
          <declname>isolate</declname>
        </param>
        <param>
          <type>v8::Local&lt; v8::Value &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="315" column="1" bodyfile="v8pp/convert.hpp" bodystart="315" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1ac52d633860883ae0738d07d3e3cbff19" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>to_type</type>
        <definition>static to_type v8pp::convert&lt; std::array&lt; T, N &gt; &gt;::to_v8</definition>
        <argsstring>(v8::Isolate *isolate, from_type const &amp;value)</argsstring>
        <name>to_v8</name>
        <param>
          <type>v8::Isolate *</type>
          <declname>isolate</declname>
        </param>
        <param>
          <type>from_type const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="341" column="1" bodyfile="v8pp/convert.hpp" bodystart="341" bodyend="351"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="v8pp/convert.hpp" line="306" column="1" bodyfile="v8pp/convert.hpp" bodystart="305" bodyend="352"/>
    <listofallmembers>
      <member refid="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1aee6aee929312ebb3629d0372a2476146" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::array&lt; T, N &gt; &gt;</scope><name>from_type</name></member>
      <member refid="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a126fa8f2ba8b6e20a9e1896fe69355ff" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::array&lt; T, N &gt; &gt;</scope><name>from_v8</name></member>
      <member refid="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a63885024dc747b039fc24493ccaf4afe" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::array&lt; T, N &gt; &gt;</scope><name>is_valid</name></member>
      <member refid="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a429c6fe6779d28bb2a251d9d9f35df41" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::array&lt; T, N &gt; &gt;</scope><name>to_type</name></member>
      <member refid="structv8pp_1_1convert_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1ac52d633860883ae0738d07d3e3cbff19" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; std::array&lt; T, N &gt; &gt;</scope><name>to_v8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
