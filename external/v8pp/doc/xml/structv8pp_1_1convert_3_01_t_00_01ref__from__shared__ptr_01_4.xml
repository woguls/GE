<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4" kind="struct" language="C++" prot="public">
    <compoundname>v8pp::convert&lt; T, ref_from_shared_ptr &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1a019cc64a5e5f15e2ac05433e76f41adf" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using v8pp::convert&lt; T, ref_from_shared_ptr &gt;::from_type =  T&amp;</definition>
        <argsstring></argsstring>
        <name>from_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="590" column="1" bodyfile="v8pp/convert.hpp" bodystart="590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1a6529b51f06c52812826d62d7e22ec54f" prot="public" static="no">
        <type>v8::Local&lt; v8::Object &gt;</type>
        <definition>using v8pp::convert&lt; T, ref_from_shared_ptr &gt;::to_type =  v8::Local&lt;v8::Object&gt;</definition>
        <argsstring></argsstring>
        <name>to_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="591" column="1" bodyfile="v8pp/convert.hpp" bodystart="591" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1a4366bb394abc97f167e73980d2d1fb4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool v8pp::convert&lt; T, ref_from_shared_ptr &gt;::is_valid</definition>
        <argsstring>(v8::Isolate *isolate, v8::Local&lt; v8::Value &gt; value)</argsstring>
        <name>is_valid</name>
        <param>
          <type>v8::Isolate *</type>
          <declname>isolate</declname>
        </param>
        <param>
          <type>v8::Local&lt; v8::Value &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="593" column="1" bodyfile="v8pp/convert.hpp" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1a1c3440223b52a270b33d758954879623" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>from_type</type>
        <definition>static from_type v8pp::convert&lt; T, ref_from_shared_ptr &gt;::from_v8</definition>
        <argsstring>(v8::Isolate *isolate, v8::Local&lt; v8::Value &gt; value)</argsstring>
        <name>from_v8</name>
        <param>
          <type>v8::Isolate *</type>
          <declname>isolate</declname>
        </param>
        <param>
          <type>v8::Local&lt; v8::Value &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="598" column="1" bodyfile="v8pp/convert.hpp" bodystart="598" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1ae8bd5ef40a5931aa64e243b6ddebd0a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>to_type</type>
        <definition>static to_type v8pp::convert&lt; T, ref_from_shared_ptr &gt;::to_v8</definition>
        <argsstring>(v8::Isolate *isolate, T const &amp;value)</argsstring>
        <name>to_v8</name>
        <param>
          <type>v8::Isolate *</type>
          <declname>isolate</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/convert.hpp" line="612" column="1" bodyfile="v8pp/convert.hpp" bodystart="612" bodyend="617"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="v8pp/convert.hpp" line="589" column="1" bodyfile="v8pp/convert.hpp" bodystart="588" bodyend="618"/>
    <listofallmembers>
      <member refid="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1a019cc64a5e5f15e2ac05433e76f41adf" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; T, ref_from_shared_ptr &gt;</scope><name>from_type</name></member>
      <member refid="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1a1c3440223b52a270b33d758954879623" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; T, ref_from_shared_ptr &gt;</scope><name>from_v8</name></member>
      <member refid="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1a4366bb394abc97f167e73980d2d1fb4e" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; T, ref_from_shared_ptr &gt;</scope><name>is_valid</name></member>
      <member refid="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1a6529b51f06c52812826d62d7e22ec54f" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; T, ref_from_shared_ptr &gt;</scope><name>to_type</name></member>
      <member refid="structv8pp_1_1convert_3_01_t_00_01ref__from__shared__ptr_01_4_1ae8bd5ef40a5931aa64e243b6ddebd0a0" prot="public" virt="non-virtual"><scope>v8pp::convert&lt; T, ref_from_shared_ptr &gt;</scope><name>to_v8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
