<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structv8pp_1_1detail_1_1function__traits" kind="struct" language="C++" prot="public">
    <compoundname>v8pp::detail::function_traits</compoundname>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01const_01_r_07_c_1_1_5_08_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; const R(C::*)&gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01const_01volatile_01_r_07_c_1_1_5_08_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; const volatile R(C::*)&gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01_f_01_6_01_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; F &amp; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01_f_01_6_6_01_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; F &amp;&amp; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01_r_07_5_08_07_args_8_8_8_08_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; R(*)(Args...)&gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; R(C::*)(Args...) const &gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01volatile_01_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; R(C::*)(Args...) const volatile &gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01volatile_01_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; R(C::*)(Args...) volatile &gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; R(C::*)(Args...)&gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01_r_07_c_1_1_5_08_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; R(C::*)&gt;</derivedcompoundref>
    <derivedcompoundref refid="structv8pp_1_1detail_1_1function__traits_3_01volatile_01_r_07_c_1_1_5_08_4" prot="public" virt="non-virtual">v8pp::detail::function_traits&lt; volatile R(C::*)&gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>F</declname>
        <defname>F</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structv8pp_1_1detail_1_1function__traits_1a529af43ec6bff5234f1ffefc296956e4" prot="private" static="no">
        <type>function_traits&lt; decltype(&amp;F::operator())&gt;</type>
        <definition>using v8pp::detail::function_traits&lt; F &gt;::callable_traits =  function_traits&lt;decltype(&amp;F::operator())&gt;</definition>
        <argsstring></argsstring>
        <name>callable_traits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/utility.hpp" line="129" column="1" bodyfile="v8pp/utility.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structv8pp_1_1detail_1_1function__traits_1a5322ca8d120b420e04d6e7eebfe14796" prot="public" static="no">
        <type>typename callable_traits::return_type</type>
        <definition>using v8pp::detail::function_traits&lt; F &gt;::return_type =  typename callable_traits::return_type</definition>
        <argsstring></argsstring>
        <name>return_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/utility.hpp" line="131" column="1" bodyfile="v8pp/utility.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structv8pp_1_1detail_1_1function__traits_1a23a47d733ecc34c2b4a9c07efcc3ae21" prot="public" static="no">
        <type>typename tuple_tail&lt; typename callable_traits::arguments &gt;::type</type>
        <definition>using v8pp::detail::function_traits&lt; F &gt;::arguments =  typename tuple_tail&lt;typename callable_traits::arguments&gt;::type</definition>
        <argsstring></argsstring>
        <name>arguments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/utility.hpp" line="132" column="1" bodyfile="v8pp/utility.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="v8pp/utility.hpp" line="33" column="1" bodyfile="v8pp/utility.hpp" bodystart="33" bodyend="-1"/>
    <listofallmembers>
      <member refid="structv8pp_1_1detail_1_1function__traits_1a23a47d733ecc34c2b4a9c07efcc3ae21" prot="public" virt="non-virtual"><scope>v8pp::detail::function_traits</scope><name>arguments</name></member>
      <member refid="structv8pp_1_1detail_1_1function__traits_1a529af43ec6bff5234f1ffefc296956e4" prot="private" virt="non-virtual"><scope>v8pp::detail::function_traits</scope><name>callable_traits</name></member>
      <member refid="structv8pp_1_1detail_1_1function__traits_1a5322ca8d120b420e04d6e7eebfe14796" prot="public" virt="non-virtual"><scope>v8pp::detail::function_traits</scope><name>return_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
