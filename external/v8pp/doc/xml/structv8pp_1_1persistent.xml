<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structv8pp_1_1persistent" kind="struct" language="C++" prot="public">
    <compoundname>v8pp::persistent</compoundname>
    <basecompoundref prot="public" virt="non-virtual">v8::Global&lt; T &gt;</basecompoundref>
    <includes refid="persistent_8hpp" local="no">persistent.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structv8pp_1_1persistent_1affa587a6445f98022313bf89cb014ac2" prot="public" static="no">
        <type>v8::Global&lt; T &gt;</type>
        <definition>using v8pp::persistent&lt; T &gt;::base_class =  v8::Global&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>base_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/persistent.hpp" line="27" column="1" bodyfile="v8pp/persistent.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structv8pp_1_1persistent_1a845dda40ba53e454b36144034f3d7c2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>v8pp::persistent&lt; T &gt;::persistent</definition>
        <argsstring>()</argsstring>
        <name>persistent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/persistent.hpp" line="29" column="1" bodyfile="v8pp/persistent.hpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1persistent_1a6f50caea3f3909eb59679375b185fe33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>v8pp::persistent&lt; T &gt;::persistent</definition>
        <argsstring>(v8::Isolate *isolate, v8::Handle&lt; S &gt; const &amp;handle)</argsstring>
        <name>persistent</name>
        <param>
          <type>v8::Isolate *</type>
          <declname>isolate</declname>
        </param>
        <param>
          <type>v8::Handle&lt; S &gt; const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/persistent.hpp" line="35" column="1" bodyfile="v8pp/persistent.hpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1persistent_1a2bbdd4f4b4749d8af96b173ec4feffb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>v8pp::persistent&lt; T &gt;::persistent</definition>
        <argsstring>(v8::Isolate *isolate, v8::PersistentBase&lt; S &gt; const &amp;handle)</argsstring>
        <name>persistent</name>
        <param>
          <type>v8::Isolate *</type>
          <declname>isolate</declname>
        </param>
        <param>
          <type>v8::PersistentBase&lt; S &gt; const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/persistent.hpp" line="41" column="1" bodyfile="v8pp/persistent.hpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1persistent_1a9592d6a97f13d2b862fb4633e1c1c5b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>v8pp::persistent&lt; T &gt;::persistent</definition>
        <argsstring>(persistent &amp;&amp;src)</argsstring>
        <name>persistent</name>
        <param>
          <type><ref refid="structv8pp_1_1persistent" kindref="compound">persistent</ref> &amp;&amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/persistent.hpp" line="46" column="1" bodyfile="v8pp/persistent.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1persistent_1ab40fa92d68515afd6eb2254175a9cae7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structv8pp_1_1persistent" kindref="compound">persistent</ref> &amp;</type>
        <definition>persistent&amp; v8pp::persistent&lt; T &gt;::operator=</definition>
        <argsstring>(persistent &amp;&amp;src)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structv8pp_1_1persistent" kindref="compound">persistent</ref> &amp;&amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/persistent.hpp" line="51" column="1" bodyfile="v8pp/persistent.hpp" bodystart="51" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1persistent_1a7435c32ed18bd760d04bc43e990433b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>v8pp::persistent&lt; T &gt;::persistent</definition>
        <argsstring>(persistent const &amp;)=delete</argsstring>
        <name>persistent</name>
        <param>
          <type><ref refid="structv8pp_1_1persistent" kindref="compound">persistent</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/persistent.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structv8pp_1_1persistent_1a4c3bde8e0c93e32bb3ea3d0fc46ff83f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structv8pp_1_1persistent" kindref="compound">persistent</ref> &amp;</type>
        <definition>persistent&amp; v8pp::persistent&lt; T &gt;::operator=</definition>
        <argsstring>(persistent const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structv8pp_1_1persistent" kindref="compound">persistent</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v8pp/persistent.hpp" line="61" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Moveable unique V8 persistent handle. Due to v8::Global has no move constructor and assign operator defined, it cannot be stored in std::map, std::unordered_map. To resolve this issue add move support in dervied class. See <ulink url="https://groups.google.com/d/topic/v8-users/KV_LZqz41Ac/discussion">https://groups.google.com/d/topic/v8-users/KV_LZqz41Ac/discussion</ulink> </para>    </detaileddescription>
    <location file="v8pp/persistent.hpp" line="26" column="1" bodyfile="v8pp/persistent.hpp" bodystart="25" bodyend="62"/>
    <listofallmembers>
      <member refid="structv8pp_1_1persistent_1affa587a6445f98022313bf89cb014ac2" prot="public" virt="non-virtual"><scope>v8pp::persistent</scope><name>base_class</name></member>
      <member refid="structv8pp_1_1persistent_1ab40fa92d68515afd6eb2254175a9cae7" prot="public" virt="non-virtual"><scope>v8pp::persistent</scope><name>operator=</name></member>
      <member refid="structv8pp_1_1persistent_1a4c3bde8e0c93e32bb3ea3d0fc46ff83f" prot="public" virt="non-virtual"><scope>v8pp::persistent</scope><name>operator=</name></member>
      <member refid="structv8pp_1_1persistent_1a845dda40ba53e454b36144034f3d7c2c" prot="public" virt="non-virtual"><scope>v8pp::persistent</scope><name>persistent</name></member>
      <member refid="structv8pp_1_1persistent_1a6f50caea3f3909eb59679375b185fe33" prot="public" virt="non-virtual"><scope>v8pp::persistent</scope><name>persistent</name></member>
      <member refid="structv8pp_1_1persistent_1a2bbdd4f4b4749d8af96b173ec4feffb0" prot="public" virt="non-virtual"><scope>v8pp::persistent</scope><name>persistent</name></member>
      <member refid="structv8pp_1_1persistent_1a9592d6a97f13d2b862fb4633e1c1c5b1" prot="public" virt="non-virtual"><scope>v8pp::persistent</scope><name>persistent</name></member>
      <member refid="structv8pp_1_1persistent_1a7435c32ed18bd760d04bc43e990433b0" prot="public" virt="non-virtual"><scope>v8pp::persistent</scope><name>persistent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
